/**
 * Firebase App Check Debug Token Setup Guide
 *
 * This guide will help you get your debug token to fix the
 * "app-not-authorized" error while developing.
 */

export const AppCheckDebugSetup = {
  // The Error You're Seeing
  error: {
    message:
      "[auth/app-not-authorized] This app is not authorized to use Firebase Authentication",
    cause: "App Check is enforced but no valid token is provided",
    solution: "Get debug token from logs and register it in Firebase Console",
  },

  // Step-by-Step Solution
  steps: {
    step1: {
      title: "Install App Check Package",
      command: "npm install @react-native-firebase/app-check@^22.4.0",
      status: "✅ DONE - Already added to package.json",
      note: "Package dependency added, run npm install if needed",
    },

    step2: {
      title: "Get Debug Token from Logs",
      action: "Run your app and trigger phone authentication",
      lookFor: [
        "Look for a log message like:",
        "D DebugAppCheckProvider: Enter this debug secret into the allow list",
        "in the Firebase Console for your project: 123a4567-b89c-12d3-e456-789012345678",
        "",
        "📱 The token will appear when you try to send OTP",
      ],
      logExample: `
D DebugAppCheckProvider: Enter this debug secret into the allow list in
the Firebase Console for your project: 123a4567-b89c-12d3-e456-789012345678
      `,
    },

    step3: {
      title: "Register Debug Token in Firebase Console",
      steps: [
        "1. Go to Firebase Console > App Check",
        "2. Find your Android app",
        "3. Click the 3-dot menu ⋮ next to your app",
        "4. Select 'Manage debug tokens'",
        "5. Click 'Add debug token'",
        "6. Paste the token from the logs",
        "7. Add a description like 'Development Debug Token'",
        "8. Click 'Done'",
      ],
      screenshot: "🖼️ Look for 'Manage debug tokens' option in app menu",
    },

    step4: {
      title: "Test the Fix",
      action: "Try phone authentication again",
      expected: "✅ Should work without the app-not-authorized error",
      fallback: "If still doesn't work, check token was registered correctly",
    },
  },

  // Quick Debugging Commands
  debugging: {
    checkInstallation: {
      command: "npm list @react-native-firebase/app-check",
      expected: "@react-native-firebase/app-check@22.4.0",
    },

    checkLogs: {
      android: "npx react-native log-android",
      filter: "Look for 'DebugAppCheckProvider' in logs",
    },

    verifyToken: {
      location: "Firebase Console > App Check > Manage debug tokens",
      check: "Ensure your token is listed and enabled",
    },
  },

  // Environment Setup
  environments: {
    development: {
      provider: "debug",
      enforcement: "unenforced (recommended for testing)",
      tokens: "Debug tokens from device logs",
    },

    production: {
      provider: "playIntegrity",
      enforcement: "enforced",
      tokens: "Automatically generated by Play Integrity",
    },
  },

  // Troubleshooting
  troubleshooting: {
    tokenNotAppearing: [
      "✅ Ensure @react-native-firebase/app-check is installed",
      "✅ Check firebaseConfig.js has App Check initialization",
      "✅ Make sure you're in development build (__DEV__ = true)",
      "✅ Try clearing app data and reinstalling",
    ],

    tokenNotWorking: [
      "✅ Verify token was copied correctly (no extra spaces)",
      "✅ Check token is enabled in Firebase Console",
      "✅ Ensure you're using the right Firebase project",
      "✅ Try deleting and re-adding the token",
    ],

    stillGettingErrors: [
      "✅ Check App Check enforcement is set to 'Unenforced'",
      "✅ Verify your app's package name matches Firebase configuration",
      "✅ Ensure SHA fingerprints are correct in Firebase Console",
      "✅ Try a clean build: npx expo run:android --clear",
    ],
  },

  // Next Steps After Debug Token Works
  production: {
    warning: "⚠️ Debug tokens are for development only!",
    productionSteps: [
      "1. Test thoroughly with debug tokens in development",
      "2. Configure Play Integrity for production builds",
      "3. Set App Check enforcement to 'Enforced' for production",
      "4. Remove debug tokens before production release",
      "5. Monitor App Check metrics in Firebase Console",
    ],
  },
};

// Immediate Action Required:
export const ImmediateAction = `
🚀 IMMEDIATE STEPS:

1. Run: npm install
2. Build and run your app: npx expo run:android
3. Try to send OTP (this will trigger the debug token generation)
4. Look for the debug token in the logs (format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)
5. Copy the token and register it in Firebase Console > App Check > Manage debug tokens
6. Try phone authentication again - should work!

📱 The debug token will appear in logs when you try to use Firebase services.
🔒 This token allows your development build to bypass Play Integrity checks.
`;

export default AppCheckDebugSetup;
