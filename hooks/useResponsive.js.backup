import { useState, useEffect } from "react";
import { Dimensions, PixelRatio } from "react-native";
import { 
  getAccessibleFontSize, 
  getScreenData, 
  getOrientation,
  getDeviceSize,
  getComponentSizes 
} from "../constants/responsive";

export const useResponsive = () => {
  const [screenData, setScreenData] = useState(getScreenData());
  const [fontScale, setFontScale] = useState(PixelRatio.getFontScale());

  useEffect(() => {
    const subscription = Dimensions.addEventListener("change", () => {
      setScreenData(getScreenData());
      setFontScale(PixelRatio.getFontScale());
    });

    return () => subscription?.remove();
  }, []);

  return {
    ...screenData,
    fontScale,
    getAccessibleFontSize: (size, options) =>
      getAccessibleFontSize(size, options),
    componentSizes: getComponentSizes(screenData.orientation),
  };
};

export const useFontScale = () => {
  const [fontScale, setFontScale] = useState(PixelRatio.getFontScale());

  useEffect(() => {
    const subscription = Dimensions.addEventListener("change", () => {
      setFontScale(PixelRatio.getFontScale());
    });

    return () => subscription?.remove();
  }, []);

  return fontScale;
};

export const useDeviceOrientation = () => {
  const [orientation, setOrientation] = useState(getOrientation());
  const [dimensions, setDimensions] = useState(getScreenData());

  useEffect(() => {
    const subscription = Dimensions.addEventListener("change", () => {
      const newOrientation = getOrientation();
      const newDimensions = getScreenData();
      
      setOrientation(newOrientation);
      setDimensions(newDimensions);
    });

    return () => subscription?.remove();
  }, []);

  return {
    orientation,
    isLandscape: orientation === "landscape",
    isPortrait: orientation === "portrait",
    ...dimensions,
  };
};
      setOrientation(window.width > window.height ? "landscape" : "portrait");
    });

    return () => subscription?.remove();
  }, []);

  return orientation;
};
